---
# safe uninstall tasks file for usb_hid_descriptor_tool
- name: Fail if override name is not set
  fail:
    msg: Override name must be non empty
  when: usb_hid_descriptor_tool_top_dest_name | length == 0

- name: Stat of install directory
  become: yes
  stat:
    path: "{{ install_dest_full }}"
  register: uhdt_install_dir_stat

- name: Unarchive and icon extract if installed
  become: yes
  block:
    - name: Include unarchive tasks
      include_tasks: unarchive.yml
    - name: Extract icon tasks
      include_tasks: icon.yml
  when:
    - not ansible_check_mode
    - uhdt_install_dir_stat.stat.exists

- name: Safe uninstall
  become: yes
  block:
    - name: Compare extracted icon with installed
      copy:
        src: "{{ tmp_icon_file_full }}"
        dest: "{{ icon_file_full }}"
        remote_src: yes
      check_mode: yes
      register: icon_result
      when: not ansible_check_mode

    - name: Fail if the installed icon doesn't match with the extracted
      fail:
        msg: Installed icon doesn't match with extracted
      when:
        - not ansible_check_mode
        - icon_result.changed

    - name: Install rsync for synchronize module
      package:
        name:
          - rsync
        state: present
      notify: Remove rsync

    - name: Remove installed content
      file:
        name: "{{ icon_file_full }}"
        state: absent

    - name: Compare unarchived content with installed
      synchronize:
        src: "{{ usb_hid_descriptor_tool_temp_dir.path }}/{{ subdir_src_name }}/"
        dest: "{{ install_dest_full }}/"
        checksum: yes
        times: no
        delete: "{{ usb_hid_descriptor_tool_force_remove | bool }}"
      check_mode: yes
      delegate_to: "{{ inventory_hostname }}"
      register: rsync_result
      when: not ansible_check_mode

    - name: Fail if the installed content doesn't match with the unarchived
      fail:
        msg: Installed content doesn't match with archive content
      when:
        - not ansible_check_mode
        - rsync_result.changed

    - name: Remove installed content
      file:
        name: "{{ install_dest_full }}"
        state: absent
  when:
    - not ansible_check_mode
    - uhdt_install_dir_stat.stat.exists

- name: Check if a desktop entry exists
  become: yes
  stat:
    path: "{{ desktop_file_full }}"
  register: uhdt_desktop_entry_stat

- name: Create the desktop entry
  become: yes
  block:
    - name: Include desktop entry tasks
      include_tasks: desktop_entry.yml
  when:
    - uhdt_desktop_entry_stat.stat.exists
    - not ansible_check_mode

- name: Safe uninstall of the desktop entry
  become: yes
  block:
    - name: Check desktop file is same
      copy:
        src: "{{ tmp_desktop_file_full }}"
        dest: "{{ desktop_file_full }}"
        remote_src: yes
      check_mode: yes
      register: usb_hid_descriptor_tool_desktop_check

    - name: Fail if content of installed desktop entry doesn't match with created one
      fail:
        msg: Installed desktop file does not match created desktop file
      when: usb_hid_descriptor_tool_desktop_check.changed

    - name: Remove installed desktop file
      file:
        name: "{{ desktop_file_full }}"
        state: absent
  when: not ansible_check_mode and uhdt_desktop_entry_stat.stat.exists
